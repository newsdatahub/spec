openapi: 3.0.1
info:
  title: NewsDataHub API
  description: |
    The NewsDataHub API provides access to news articles and sources with comprehensive filtering options.

    ## Authentication
    All endpoints require authentication using an API key in the `X-API-Key` header.

    **Get your API key:**
    Sign up at [newsdatahub.com](https://newsdatahub.com) to get instant access. Choose from:
    - **Free tier** with limited features (no credit card required)
    - **Full-featured 7-day free trial** (credit card required)

    ## API Quotas and Rate Limits
    API usage limits vary by subscription tier:
    - **Free**: 50 requests/day (100 calls/month with daily distribution limit to prevent abuse)
    - **Free Trial**: 50 requests/day for 7 days (during trial period)
    - **Starter**: 300 requests/day (9,000 calls/month)
    - **Basic**: 200 requests/minute (20,000 calls/month)
    - **Pro**: 200 requests/minute (30,000 calls/month)

    ## Pagination
    All endpoints use cursor-based pagination for efficient handling of large result sets.

  version: 1.0.0
  contact:
    name: NewsDataHub Support
    email: support@newsdatahub.com
    url: https://newsdatahub.com
  license:
    name: Proprietary
    url: https://newsdatahub.com/terms-of-service

servers:
  - url: https://api.newsdatahub.com
    description: Production server

security:
  - ApiKeyAuth: []

paths:
  /v1/news:
    get:
      summary: Retrieve news articles
      description: |
        Retrieve individual news articles with comprehensive filtering options.

        **Access Levels:**
        - **Free**: Content truncated to 100 characters, 48-hour delay, no keywords/topics/sentiment
        - **Starter**: Full content, no keywords/topics/sentiment
        - **Basic/Pro**: Full content with keywords, topics, and sentiment analysis

      operationId: getNews
      tags:
        - News
      parameters:
        - name: q
          in: query
          description: Search query for article content (supports AND, OR, NOT operators)
          required: false
          schema:
            type: string
            example: "college"
        - name: country
          in: query
          description: Filter by country codes (comma-separated, 2-letter ISO codes)
          required: false
          schema:
            type: string
            pattern: '^[A-Z]{2}(,[A-Z]{2})*$'
            example: "US"
        - name: topic
          in: query
          description: Filter by topics. Supports multiple values via repeated params (?topic=health&topic=finance) or comma-separated (?topic=health,finance)
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          example: "education"
        - name: language
          in: query
          description: Filter by language code (2-letter ISO code)
          required: false
          schema:
            type: string
            pattern: '^[a-z]{2}$'
            example: "en"
        - name: source
          in: query
          description: Filter by news source name. Supports multiple values via repeated params (?source=WHDH+7News&source=Boston.com) or comma-separated (?source=WHDH+7News,Boston.com)
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          example: "WHDH 7News"
        - name: start_date
          in: query
          description: Start date for articles (ISO 8601 format, YYYY-MM-DD)
          required: false
          schema:
            type: string
            format: date
            example: "2025-06-01"
        - name: end_date
          in: query
          description: End date for articles (ISO 8601 format, YYYY-MM-DD, max 90 days from start_date)
          required: false
          schema:
            type: string
            format: date
            example: "2025-08-30"
        - name: per_page
          in: query
          description: |
            Number of results per page (tier-dependent limits):
            - Free: max 10
            - Starter: max 20
            - Basic: max 50
            - Pro: max 100
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
            example: 20
        - name: cursor
          in: query
          description: Pagination cursor from previous response
          required: false
          schema:
            type: string
        - name: political_leaning
          in: query
          description: Filter by source political leaning. Supports multiple values via repeated params or comma-separated. Values: left, center_left, center, center_right, right, far_left, far_right
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [left, center_left, center, center_right, right, far_left, far_right]
          style: form
          explode: true
          example: "center"
        - name: source_type
          in: query
          description: Filter by source type. Supports multiple values via repeated params (?source_type=newspaper&source_type=magazine) or comma-separated (?source_type=newspaper,magazine)
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [digital_native, press_release, newspaper, magazine, mainstream_news, blog, specialty_news]
          style: form
          explode: true
          example: "newspaper"
        - name: exclude_topic
          in: query
          description: Exclude topics from results. Supports multiple values via repeated params or comma-separated
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          example: "sports"
        - name: fields
          in: query
          description: Comma-separated list of fields to return (e.g., title,pub_date,source_title). Returns all fields if not specified. 'id' is always included.
          required: false
          schema:
            type: string
            example: "title,pub_date,source_title"
      responses:
        '200':
          description: Successful response with news articles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsResponse'
              example:
                data:
                  - id: "c6d1fc78-2ff3-43e6-9889-2da0ea831262"
                    title: "Major Technology Breakthrough Announced"
                    source_title: "Boston.com"
                    source_link: "https://boston.com"
                    article_link: "https://boston.com/articles/breakthrough"
                    keywords: ["technology", "innovation", "AI"]
                    topics: ["technology", "artificial intelligence"]
                    description: "Scientists announce significant breakthrough in AI technology..."
                    pub_date: "2025-01-15T10:30:00Z"
                    creator: "John Smith"
                    content: "Scientists at leading research institutions have announced..."
                    media_url: "https://boston.com/images/breakthrough.jpg"
                    media_type: "image"
                    language: "en"
                    sentiment:
                      pos: 0.7
                      neg: 0.1
                      neu: 0.2
                    source:
                      id: "boston-com"
                      country: "US"
                      political_leaning: "center"
                      reliability_score: 8.5
                      type: "digital_native"
                total_results: 156789
                per_page: 20
                next_cursor: "eyJvZmZzZXQiOjIwLCJ0aW1lc3RhbXAiOiIyMDI1LTAxLTE1VDEwOjMwOjAwWiJ9"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/top-news:
    get:
      summary: Retrieve top/breaking news articles
      description: |
        Returns articles from major news organizations published within the last 
        24-72 hours, filtered by key topics (politics, technology, business, etc.).
        This endpoint surfaces important coverage from main stream news media but
        does not guarantee breaking news or real-time updates. The only topics covered are: 
          politics, technology, business, finance, government, crime, health, sports

      operationId: getTopNews
      tags:
        - News
      parameters:
        - name: hours
          in: query
          description: Time window for top news in hours (24, 48, or 72)
          required: false
          schema:
            type: integer
            enum: [24, 48, 72]
            default: 48
            example: 48
        - name: require_media
          in: query
          description: Whether to require articles to have media (images/videos)
          required: false
          schema:
            type: boolean
            default: false
            example: true
        - name: q
          in: query
          description: Search query for article content (supports AND, OR, NOT operators)
          required: false
          schema:
            type: string
            example: "election"
        - name: country
          in: query
          description: Filter by country codes (comma-separated, 2-letter ISO codes)
          required: false
          schema:
            type: string
            pattern: '^[A-Z]{2}(,[A-Z]{2})*$'
            example: "US"
        - name: topic
          in: query
          description: |
            Filter by topics. Supports multiple values via repeated params or comma-separated.

            **Default topics** (if not specified): politics, technology, business, finance, government, crime, health, sports

            **Recommended topics**: Use the default topics listed above for best results, as articles are primarily curated for these categories.

            Note: Articles may have additional topic tags, but filtering by non-default topics may return fewer or no results.
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          example: "politics"
        - name: language
          in: query
          description: Filter by language code (2-letter ISO code)
          required: false
          schema:
            type: string
            pattern: '^[a-z]{2}$'
            example: "en"
        - name: source
          in: query
          description: Filter by news source name. Supports multiple values via repeated params or comma-separated
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          example: "Boston.com"
        - name: political_leaning
          in: query
          description: Filter by source political leaning. Supports multiple values via repeated params or comma-separated. Values: left, center_left, center, center_right, right, far_left, far_right
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [left, center_left, center, center_right, right, far_left, far_right]
          style: form
          explode: true
          example: "center"
        - name: per_page
          in: query
          description: |
            Number of results per page (tier-dependent limits):
            - Free: max 10
            - Starter: max 20
            - Basic: max 50
            - Pro: max 100
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
            example: 20
        - name: cursor
          in: query
          description: Pagination cursor from previous response
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated list of fields to return (e.g., title,pub_date,source_title). Returns all fields if not specified. 'id' is always included.
          required: false
          schema:
            type: string
            example: "title,pub_date,source_title"
      responses:
        '200':
          description: Successful response with top news articles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsResponse'
              example:
                data:
                  - id: "c6d1fc78-2ff3-43e6-9889-2da0ea831262"
                    title: "Major Technology Breakthrough Announced"
                    source_title: "Boston.com"
                    source_link: "https://boston.com"
                    article_link: "https://boston.com/articles/breakthrough"
                    keywords: ["technology", "innovation", "AI"]
                    topics: ["technology", "artificial intelligence"]
                    description: "Scientists announce significant breakthrough in AI technology..."
                    pub_date: "2025-01-15T10:30:00Z"
                    creator: "John Smith"
                    content: "Scientists at leading research institutions have announced..."
                    media_url: "https://boston.com/images/breakthrough.jpg"
                    media_type: "image"
                    language: "en"
                    sentiment:
                      pos: 0.7
                      neg: 0.1
                      neu: 0.2
                    source:
                      id: "boston-com"
                      country: "US"
                      political_leaning: "center"
                      reliability_score: 8.5
                      type: "digital_native"
                total_results: 156789
                per_page: 20
                next_cursor: "eyJvZmZzZXQiOjIwLCJ0aW1lc3RhbXAiOiIyMDI1LTAxLTE1VDEwOjMwOjAwWiJ9"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/news/{article_id}/related:
    get:
      summary: Get related articles
      description: |
        Find articles similar to a given article.

        **Similarity matching**: Compares title, description, topics, and keywords to find related articles.

        **Recency filter**: Only returns articles published within the last 60 days.

        **Access Levels:**
        - **Free**: Content truncated to 100 characters, 48-hour delay, no keywords/topics/sentiment
        - **Starter**: Full content, no keywords/topics/sentiment
        - **Basic/Pro**: Full content with keywords, topics, and sentiment analysis

      operationId: getRelatedArticles
      tags:
        - News
      parameters:
        - name: article_id
          in: path
          description: The ID (UUID) of the article to find similar articles for
          required: true
          schema:
            type: string
            format: uuid
            example: "fa90d4bd-f901-4ea6-8b4d-e6f7a451d311"
        - name: per_page
          in: query
          description: |
            Number of related articles to return (tier-dependent limits):
            - Free: max 10
            - Starter: max 30
            - Basic: max 50
            - Pro: max 100
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 5
            example: 5
        - name: fields
          in: query
          description: Comma-separated list of fields to return (e.g., title,pub_date,source_title). Returns all fields if not specified. 'id' is always included.
          required: false
          schema:
            type: string
            example: "title,pub_date,source_title"
      responses:
        '200':
          description: Successful response with related articles
          content:
            application/json:
              schema:
                type: object
                properties:
                  related_to:
                    type: string
                    description: The article ID that was queried
                    example: "fa90d4bd-f901-4ea6-8b4d-e6f7a451d311"
                  count:
                    type: integer
                    description: Number of related articles returned
                    example: 5
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/NewsArticle'
              example:
                related_to: "fa90d4bd-f901-4ea6-8b4d-e6f7a451d311"
                count: 3
                data:
                  - id: "c6d1fc78-2ff3-43e6-9889-2da0ea831262"
                    title: "Similar Technology Story"
                    source_title: "Boston.com"
                    pub_date: "2025-01-15T09:00:00Z"
                  - id: "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
                    title: "Another Related Article"
                    source_title: "WHDH 7News"
                    pub_date: "2025-01-14T18:30:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/sources:
    get:
      summary: Retrieve news sources
      description: |
        Retrieve news sources with comprehensive filtering options.

        **Pagination:** Results are sorted alphabetically by title for consistent ordering.
      operationId: getSources
      tags:
        - Sources
      parameters:
        - name: country
          in: query
          description: Filter by country code (2-letter ISO code)
          required: false
          schema:
            type: string
            pattern: '^[A-Z]{2}$'
            example: "US"
        - name: language
          in: query
          description: Filter by language code (2-letter ISO code)
          required: false
          schema:
            type: string
            pattern: '^[a-z]{2}$'
            example: "en"
        - name: region
          in: query
          description: Filter by geographical region
          required: false
          schema:
            type: string
            enum: ["north_america", "south_america", "europe", "asia", "africa", "oceania", "middle_east"]
            example: "north_america"
        - name: type
          in: query
          description: Filter by source type
          required: false
          schema:
            type: string
            enum: ["digital_native", "press_release", "newspaper", "magazine", "mainstream_news", "blog", "specialty_news"]
            example: "newspaper"
        - name: coverage
          in: query
          description: Filter by coverage areas (comma-separated)
          required: false
          schema:
            type: string
            example: "national"
        - name: locality
          in: query
          description: Filter by city/locality (partial match)
          required: false
          schema:
            type: string
            example: "Washington, DC"
        - name: q
          in: query
          description: Search query for source title and description (supports exact phrase with quotes)
          required: false
          schema:
            type: string
            example: "American Free Press"
        - name: per_page
          in: query
          description: Number of results per page (20 or 50)
          required: false
          schema:
            type: integer
            enum: [20, 50]
            default: 20
            example: 20
        - name: cursor
          in: query
          description: Pagination cursor from previous response
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response with news sources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourcesResponse'
              example:
                next_cursor: "QW1lcmljYW4gRnJlZSBQcmVzcyxhbWVyaWNhbi1mcmVlLXByZXNz"
                total_results: 1
                per_page: 20
                data:
                  - id: "american-free-press"
                    title: "American Free Press"
                    description: "American Free Press is a publication known for its controversial and often conspiratorial content, focusing on topics such as government, politics, and historical revisionism. Established in 2001, it has been associated with far-right perspectives and has faced criticism for promoting conspiracy theories and misinformation. The publication claims to offer alternative viewpoints not covered by mainstream media. Its significance lies in its appeal to a niche audience interested in non-mainstream narratives and skepticism towards government and media institutions."
                    country: "US"
                    language: "en"
                    region: "north_america"
                    type: "newspaper"
                    coverage: ["national"]
                    website: "https://americanfreepress.net"
                    base_url: "americanfreepress.net"
                    geolocation:
                      latitude: 38.89511
                      longitude: -77.03637
                      city: "Washington, DC"
                      timezone: "America/New_York"
                    founded_year: 2001
                    enhanced_metadata:
                      reliability_score: 3
                      bias_rating:
                        political_leaning: "far_right"
                        objectivity_score: 2
                      content_focus: ["politics", "government", "conspiracy theories", "historical revisionism"]
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/sources/{id}:
    get:
      summary: Get source by ID
      description: |
        Retrieve a specific news source by its unique identifier.
      operationId: getSourceById
      tags:
        - Sources
      parameters:
        - name: id
          in: path
          description: Unique identifier of the news source
          required: true
          schema:
            type: string
            example: "newsweek"
      responses:
        '200':
          description: Successful response with source details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsSource'
              example:
                id: "newsweek"
                title: "Newsweek"
                description: "Newsweek is a prominent American news magazine founded in 1933, known for its in-depth analysis and coverage of global and national issues. It offers a diverse range of content, including politics, business, technology, and culture, appealing to a broad audience. Historically, Newsweek has undergone several transformations, including shifts in ownership and format, but remains a significant player in the media landscape. It is recognized for its investigative journalism and strives to provide balanced reporting while occasionally featuring opinion pieces."
                country: "US"
                language: "en"
                region: "north_america"
                type: "magazine"
                coverage: ["national", "international"]
                website: "https://newsweek.com"
                base_url: "https://newsweek.com"
                geolocation:
                  latitude: 40.7128
                  longitude: -74.006
                  city: "New York, NY"
                  timezone: "America/New_York"
                founded_year: 1933
                enhanced_metadata:
                  reliability_score: 8
                  bias_rating:
                    political_leaning: "center"
                    objectivity_score: 7
                  content_focus: ["politics", "business", "technology", "culture", "international affairs"]
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

  schemas:
    NewsResponse:
      type: object
      required:
        - data
        - total_results
        - per_page
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/NewsArticle'
        total_results:
          type: integer
          description: Total number of articles matching criteria
          example: 156789
        per_page:
          type: integer
          description: Number of results per page
          example: 20
        next_cursor:
          type: string
          nullable: true
          description: Cursor for next page (null if no more results)
          example: "eyJvZmZzZXQiOjIwLCJ0aW1lc3RhbXAiOiIyMDI0LTAxLTE1VDEwOjMwOjAwWiJ9"

    NewsArticle:
      type: object
      required:
        - id
        - title
        - source_title
        - source_link
        - article_link
        - description
        - pub_date
        - language
      properties:
        id:
          type: string
          description: Unique article identifier
          example: "c6d1fc78-2ff3-43e6-9889-2da0ea831262"
        title:
          type: string
          description: Article headline
          example: "Major Technology Breakthrough Announced"
        source_title:
          type: string
          description: Name of the news source
          example: "TechNews Daily"
        source_link:
          type: string
          format: uri
          description: URL of the news source
          example: "https://technews.com"
        article_link:
          type: string
          format: uri
          description: Direct URL to the article
          example: "https://technews.com/articles/breakthrough"
        keywords:
          type: array
          items:
            type: string
          description: Keywords associated with the article (Basic/Pro tiers only)
          example: ["technology", "innovation", "AI"]
        topics:
          type: array
          items:
            type: string
          description: Detected topics and categories (Basic/Pro tiers only)
          example: ["technology", "artificial intelligence"]
        description:
          type: string
          description: Article description or excerpt
          example: "Scientists announce significant breakthrough in AI technology..."
        pub_date:
          type: string
          format: date-time
          description: Article publication timestamp (ISO 8601)
          example: "2024-01-15T10:30:00Z"
        creator:
          type: string
          nullable: true
          description: Article author
          example: "John Smith"
        content:
          type: string
          description: Full article content (truncated for free tier)
          example: "Scientists at leading research institutions have announced..."
        media_url:
          type: string
          format: uri
          nullable: true
          description: URL to associated media
          example: "https://technews.com/images/breakthrough.jpg"
        media_type:
          type: string
          nullable: true
          description: Type of media associated with the article
          example: "image"
        language:
          type: string
          description: Language code (2-letter ISO)
          example: "en"
        sentiment:
          $ref: '#/components/schemas/Sentiment'
        source:
          $ref: '#/components/schemas/SourceMetadata'

    Sentiment:
      type: object
      description: Sentiment analysis scores (Basic/Pro tiers only)
      properties:
        pos:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Positive sentiment score
          example: 0.7
        neg:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Negative sentiment score
          example: 0.1
        neu:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Neutral sentiment score
          example: 0.2

    SourceMetadata:
      type: object
      properties:
        id:
          type: string
          description: Source identifier
          example: "technews-daily"
        country:
          type: string
          description: Source country code (2-letter ISO)
          example: "US"
        political_leaning:
          type: string
          description: Political leaning classification
          example: "center"
        reliability_score:
          type: number
          format: float
          minimum: 0
          maximum: 10
          description: Reliability score (0-10)
          example: 8.5
        type:
          type: string
          description: Source type
          example: "digital_native"

    SourcesResponse:
      type: object
      required:
        - data
        - next_cursor
        - total_results
        - per_page
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/NewsSource'
        next_cursor:
          type: string
          nullable: true
          description: Cursor for next page (null if no more results)
          example: "eyJzb3J0IjpbIlRoZSBOZXcgWW9yayBUaW1lcyIsIm55dGltZXMiXX0="
        total_results:
          type: integer
          description: Total number of sources matching criteria
          example: 2847
        per_page:
          type: integer
          description: Number of results per page
          example: 20

    NewsSource:
      type: object
      required:
        - id
        - title
        - country
        - language
        - region
        - type
      properties:
        id:
          type: string
          description: Unique source identifier
          example: "ctpost"
        title:
          type: string
          description: Source name
          example: "Connecticut Post"
        description:
          type: string
          description: Source description
          example: "The Connecticut Post, established in 1883, is a prominent daily newspaper headquartered in Bridgeport, Connecticut. It primarily serves the Fairfield County area, offering comprehensive coverage of local and regional news, politics, business, and sports."
        country:
          type: string
          description: Country code (2-letter ISO)
          example: "US"
        language:
          type: string
          description: Language code (2-letter ISO)
          example: "en"
        region:
          type: string
          description: Geographical region
          example: "north_america"
        type:
          type: string
          description: Source type
          example: "newspaper"
        coverage:
          type: array
          items:
            type: string
          description: Coverage areas
          example: ["local", "regional", "national"]
        website:
          type: string
          format: uri
          description: Source website URL
          example: "https://ctpost.com"
        base_url:
          type: string
          format: uri
          description: Base URL for the source
          example: "ctpost.com"
        geolocation:
          $ref: '#/components/schemas/Geolocation'
        founded_year:
          type: integer
          nullable: true
          description: Year the source was founded
          example: 1883
        enhanced_metadata:
          $ref: '#/components/schemas/EnhancedMetadata'

    Geolocation:
      type: object
      properties:
        latitude:
          type: number
          format: float
          nullable: true
          description: Latitude coordinate
          example: 41.1792
        longitude:
          type: number
          format: float
          nullable: true
          description: Longitude coordinate
          example: -73.1894
        city:
          type: string
          description: City location
          example: "Bridgeport, Connecticut"
        timezone:
          type: string
          description: Timezone identifier
          example: "America/New_York"

    EnhancedMetadata:
      type: object
      properties:
        reliability_score:
          type: integer
          nullable: true
          minimum: 0
          maximum: 10
          description: Reliability score (0-10)
          example: 8
        bias_rating:
          $ref: '#/components/schemas/BiasRating'
        content_focus:
          type: array
          items:
            type: string
          description: Primary content focus areas
          example: ["local news", "regional news", "politics", "business", "sports"]

    BiasRating:
      type: object
      properties:
        political_leaning:
          type: string
          description: Political leaning classification
          example: "center"
        objectivity_score:
          type: integer
          nullable: true
          minimum: 0
          maximum: 10
          description: Objectivity score (0-10)
          example: 7


    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error type or brief description
          example: "Bad Request"
        message:
          type: string
          description: Detailed error message describing what went wrong
          example: "Invalid country code format"

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Bad Request"
            message: "Invalid country code format"

    Unauthorized:
      description: Missing or invalid API key
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Unauthorized"
            message: "API key is either invalid or expired/deactivated"

    Forbidden:
      description: Access denied - upgrade required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Access Forbidden"
            message: "You don't have permission to access this resource. Check your subscription plan or API key permissions."

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Not Found"
            message: "The requested endpoint or resource was not found. Please check your URL and try again."

    TooManyRequests:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Too Many Requests"
            message: "You have exceeded your monthly/daily quota or per-minute rate limit. Check the X-Quota-* and X-RateLimit-* headers for your current usage and limits, or upgrade to a higher quota tier."

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Internal Server Error"
            message: "An unexpected error occurred on the server. Please try again later."

tags:
  - name: News
    description: News articles with comprehensive filtering and search capabilities
  - name: Sources
    description: News source information and metadata
